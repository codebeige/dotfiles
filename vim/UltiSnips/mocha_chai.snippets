snippet .s "should" i
.should
endsnippet 

snippet .h "have" i
.have
endsnippet 

snippet .n "not" i
.not
endsnippet

snippet .e "eql" i
.eql ${1:value}
endsnippet

snippet .se "should eql" i
.should.eql ${1:value}
endsnippet

snippet .= "equal" i
.equal ${1:value}
endsnippet

snippet .s= "should equal" i
.should.equal ${1:value}
endsnippet

snippet .sbai "should be an instanceof" i
.should.be.an.instanceof ${1:Class}
endsnippet

snippet .shp "should have property" i
.should.have.property "${1:prop}"${2:, ${3:value}}
endsnippet

snippet .shdp "should have deep property" i
.should.have.deep.property "${1:prop}"${2:, ${3:value}}
endsnippet

snippet .se "should exist" i
.should.exist
endsnippet

snippet .sne "should not exist" i
.should.not.exist
endsnippet

snippet .sbt "should be true" i
.should.be.true
endsnippet

snippet .sbf "should be false" i
.should.be.false
endsnippet

snippet .sbn "should be null" i
.should.be.null
endsnippet

snippet .sm "should match" i
.should.match "${1:selector}"
endsnippet

snippet .shl "should have length" i
.should.have.lengthOf ${1:0}
endsnippet


