snippet spy "spy on method" b
sinon.spy ${1:target}, '${2:method}'
endsnippet

snippet spy= "create spy" b
${1:spy} = sinon.spy()$0
endsnippet

snippet =spy "assign spy" w
= sinon.spy()
endsnippet

snippet stub= "create stub" w
${1:stub} = sinon.stub()$0
endsnippet

snippet =stub "assign stub" w
= sinon.stub()
endsnippet

snippet stub "stub method" b
sinon.stub ${1:target}, '${2:method}'
endsnippet

snippet .r "restore" i
.restore()
endsnippet

snippet .wa "with arguments" i
.withArgs(${1:args}).returns ${2:obj}
endsnippet

snippet .hbco "have been called once" i
.have.been.calledOnce
endsnippet

snippet .hbcw "have been called with" i
.have.been.calledWith ${1:args}
endsnippet

snippet .nhbc "not have been called" i
.not.have.been.called
endsnippet

snippet .hbca "have been colled after" i
.have.been.calledAfter ${1:spy}
endsnippet
